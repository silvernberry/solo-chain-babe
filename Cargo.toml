[workspace.package]
version = "0.1.0"
edition = "2021"
license = "MIT-0"
authors = ["Parity Technologies <admin@parity.io>"]
homepage = "https://paritytech.github.io/polkadot-sdk/"
repository = "https://github.com/paritytech/polkadot-sdk-solochain-template.git"


[workspace]
members = [
    "node",
    "pallets/template",
    "runtime",
    "substrate/frame",
    "substrate/frame/democracy",
    "substrate/frame/grandpa",
    "substrate/frame/babe",
    "substrate/frame/contracts",
    "substrate/frame/staking",

]
resolver = "2"

[workspace.lints.rust]
suspicious_double_ref_op = { level = "allow", priority = 2 }
# `substrate_runtime` is a common `cfg` condition name used in the repo.
unexpected_cfgs = { level = "warn", check-cfg = [
	'cfg(build_opt_level, values("3"))',
	'cfg(build_profile, values("debug", "release"))',
	'cfg(enable_alloc_error_handler)',
	'cfg(fuzzing)',
	'cfg(substrate_runtime)',
] }


[workspace.lints.clippy]
all = { level = "allow", priority = 0 }
bind_instead_of_map = { level = "allow", priority = 2 }              # stylistic
borrowed-box = { level = "allow", priority = 2 }                     # Reasonable to fix this one
complexity = { level = "warn", priority = 1 }
correctness = { level = "warn", priority = 1 }
default_constructed_unit_structs = { level = "allow", priority = 2 } # stylistic
derivable_impls = { level = "allow", priority = 2 }                  # false positives
eq_op = { level = "allow", priority = 2 }                            # In tests we test equality.
erasing_op = { level = "allow", priority = 2 }                       # E.g. 0 * DOLLARS
extra-unused-type-parameters = { level = "allow", priority = 2 }     # stylistic
identity-op = { level = "allow", priority = 2 }                      # One case where we do 0 +
if-same-then-else = { level = "allow", priority = 2 }
needless-lifetimes = { level = "allow", priority = 2 }               # generated code
needless_option_as_deref = { level = "allow", priority = 2 }         # false positives
nonminimal-bool = { level = "allow", priority = 2 }                  # maybe
option-map-unit-fn = { level = "allow", priority = 2 }               # stylistic
stable_sort_primitive = { level = "allow", priority = 2 }            # prefer stable sort
too-many-arguments = { level = "allow", priority = 2 }               # (Turning this on would lead to)
type_complexity = { level = "allow", priority = 2 }                  # raison d'etre
unit_arg = { level = "allow", priority = 2 }                         # stylistic
unnecessary_cast = { level = "allow", priority = 2 }                 # Types may change
useless_conversion = { level = "allow", priority = 2 }               # Types may change
while_immutable_condition = { level = "allow", priority = 2 }        # false positives
zero-prefixed-literal = { level = "allow", priority = 2 }            # 00_1000_000

[patch.crates-io]
pallet-contracts-fixtures = { path = "substrate/frame/contracts/fixtures"}

[workspace.dependencies]

solo-substrate-runtime = { path = "./runtime", default-features = false }
pallet-template = { path = "./pallets/template", default-features = false }
clap = { version = "4.5.13" }
frame-benchmarking-cli = { version = "47.0.0", default-features = false }
frame-metadata-hash-extension = { version = "0.8.0", default-features = false }
frame-system = { version = "40.1.0", default-features = false }
futures = { version = "0.3.31" }
jsonrpsee = { version = "0.24.3" }
codec = { version = "3.7.4", default-features = false, package = "parity-scale-codec" }
pallet-transaction-payment = { version = "40.0.0", default-features = false }
pallet-transaction-payment-rpc = { version = "43.0.0", default-features = false }
sc-basic-authorship = { version = "0.49.0", default-features = false }
sc-cli = { version = "0.51.0", default-features = false }
sc-client-api = { version = "39.0.0", default-features = false }
sc-consensus = { version = "0.48.0", default-features = false }
sc-consensus-aura = { version = "0.49.0", default-features = false }
sc-consensus-grandpa = { version = "0.34.0", default-features = false }
sc-executor = { version = "0.42.0", default-features = false }
sc-network = { version = "0.49.0", default-features = false }
sc-offchain = { version = "44.0.0", default-features = false }
sc-service = { version = "0.50.0", default-features = false }
sc-telemetry = { version = "28.1.0", default-features = false }
sc-transaction-pool = { version = "39.0.0", default-features = false }
sc-transaction-pool-api = { version = "39.0.0", default-features = false }
sp-api = { version = "36.0.1", default-features = false }
sp-block-builder = { version = "36.0.0", default-features = false }
sp-blockchain = { version = "39.0.0", default-features = false }
sp-consensus-aura = { version = "0.42.0", default-features = false }
sp-core = { version = "36.1.0", default-features = false }
sp-genesis-builder = { version = "0.17.0", default-features = false }
sp-inherents = { version = "36.0.0", default-features = false }
sp-io = { version = "40.0.0", default-features = false }
sp-keyring = { version = "41.0.0", default-features = false }
sp-runtime = { version = "41.1.0", default-features = false }
sp-timestamp = { version = "36.0.0", default-features = false }
substrate-frame-rpc-system = { version = "43.0.0", default-features = false }
substrate-build-script-utils = { version = "11.0.0", default-features = false }
parity-scale-codec = { version = "3.7.4", features = ["derive"], default-features = false }
scale-info = { version = "2.11.6", features = ["derive"], default-features = false }
frame = { path = "substrate/frame", default-features = false, package = "polkadot-sdk-frame" }
frame-benchmarking = { version = "40.0.0", default-features = false }
frame-executive = { version = "40.0.0", default-features = false }
frame-support = { version = "40.1.0", default-features = false }
frame-system-benchmarking = { version = "40.0.0", default-features = false }
frame-system-rpc-runtime-api = { version = "36.0.0", default-features = false }
frame-try-runtime = { version = "0.46.0", default-features = false }
pallet-balances = { version = "41.1.0", default-features = false }
pallet-sudo = { version = "40.0.0", default-features = false }
pallet-session = { version = "40.0.0", default-features = false }
pallet-timestamp = { version = "39.0.0", default-features = false }
pallet-transaction-payment-rpc-runtime-api = { version = "40.0.0", default-features = false }
serde_json = { version = "1.0.132", default-features = false }
sp-consensus-grandpa = { version = "23.1.0", default-features = false }
sp-offchain = { version = "36.0.0", default-features = false }
sp-session = { version = "38.1.0", default-features = false }
sp-storage = { version = "22.0.0", default-features = false }
sp-transaction-pool = { version = "36.0.0", default-features = false }
sp-version = { version = "39.0.0", default-features = false }
substrate-wasm-builder = { version = "26.0.0", default-features = false }
secp256k1 = {version = "0.27", default-features = false, features = ["rust"] }
polkavm-derive = "0.18.0"
docify = { version = "0.2.9" }
pallet-examples = { version = "7.0.0", default-features = false }
log = { version = "0.4.22", default-features = false }
sp-application-crypto  = { version = "40.1.0", default-features = false }
sp-consensus-babe = { version = "0.42.1", default-features = false }
sp-staking = { version = "38.0.0", default-features = false }
sc-consensus-epochs = { version = "0.48.0", default-features = false }
frame-election-provider-support = { version = "40.1.0", default-features = false }
pallet-authorship = { version = "40.0.0", default-features = false }
pallet-offences = { version = "39.0.0", default-features = false }
pallet-im-online = { version = "39.1.0", default-features = false }
sc-consensus-babe = { version = "0.49.0", default-features = false }
sc-network-common = { version = "0.48.0", default-features = false }
sp-consensus =  { version = "0.42.0", default-features = false }
sc-rpc-api = { version = "0.48.0", default-features = false }
sc-network-sync = { version = "0.48.0", default-features = false }
sc-storage-monitor = { version = "0.24.0", default-features = false }

# local pallets
pallet-babe = { path = "substrate/frame/babe", default-features = false }
pallet-staking = { path = "substrate/frame/staking", default-features = false }
pallet-democracy = { path = "substrate/frame/democracy", default-features = false }
pallet-grandpa = { path = "substrate/frame/grandpa", default-features = false }
pallet-contracts = { path = "substrate/frame/contracts", default-features = false }
pallet-contracts-fixtures = { path = "substrate/frame/contracts/fixtures", default-features = false }
pallet-staking-reward-curve = { path = "substrate/frame/staking/reward-curve", default-features = false }


# frame/contracts/fixtures

anyhow = { version = "1.0.81", default-features = false }
parity-wasm = { version = "0.45.0" }
tempfile = { version = "3.8.1" }
toml = { version = "0.8.12" }
twox-hash = { version = "1.6.3", default-features = false }

# frame/contracts/mock-network

pallet-assets = { version = "42.0.0", default-features = false }
pallet-contracts-uapi =  { version = "14.0.0", default-features = false }
pallet-contracts-proc-macro =  { version = "23.0.2", default-features = false }
pallet-insecure-randomness-collective-flip =  { version = "28.0.0", default-features = false }
pallet-message-queue =  { version = "43.1.0", default-features = false }
pallet-proxy =  { version = "40.1.0", default-features = false }
pallet-utility =  { version = "40.0.0", default-features = false }
pallet-xcm =  { version = "19.1.0", default-features = false }
polkadot-parachain-primitives =  { version = "16.1.0", default-features = false }
polkadot-primitives =  { version = "18.1.0", default-features = false }
polkadot-runtime-parachains =  { version = "19.1.0", default-features = false }
sp-keystore =  { version = "0.42.0", default-features = false }
sp-tracing =  { version = "17.1.0", default-features = false }
xcm =  { version = "16.1.0", default-features = false, package = "staging-xcm" }
xcm-builder =  { version = "20.0.0", default-features = false, package = "staging-xcm-builder" }
xcm-executor =  { version = "19.1.0", default-features = false,  package = "staging-xcm-executor" }
xcm-simulator =  { version = "20.0.0", default-features = false }
assert_matches = { version = "1.5.0" }
pretty_assertions = { version = "1.3.0" }
secp256k1-sys = { version = "0.9", default-features = false, features = ["precompiled"] }


# frame/contracts/proc-macro

proc-macro2 = { version = "1.0.86" }
quote = { version = "1.0.37" }
syn = { version = "2.0.87" }

# frame/contracts

paste = { version = "1.0.15", default-features = false }
bitflags = { version = "1.3.2" }
serde = { version = "1.0.214", default-features = false }
smallvec = { version = "1.11.0", default-features = false }
wasmi = { version = "0.32.3", default-features = false }
impl-trait-for-tuples = { version = "0.2.2" }
wasm-instrument = { version = "0.4", default-features = false }
rand = { version = "0.8.5", default-features = false }
rand_pcg = { version = "0.3.1" }
environmental = { version = "1.1.4", default-features = false }
sp-std = { version = "14.0.0", default-features = false }
array-bytes = { version = "6.2.2", default-features = false }
wat = { version = "1.0.0" }

# frame/democracy

pallet-scheduler = { version = "41.0.0", default-features = false }
pallet-preimage = { version = "40.0.0", default-features = false }

# frame/grandpa

finality-grandpa = { version = "0.16.3", default-features = false }

# frame/staking

rand_chacha = { version = "0.3.1", default-features = false }
sp-npos-elections  = { version = "36.1.0", default-features = false }
pallet-bags-list  = { version = "39.1.0", default-features = false }
substrate-test-utils  = { version = "3.0.0", default-features = false }
pallet-election-provider-multi-phase = { version = "39.1.0", default-features = false}
pallet-bag-list = { version = "39.1.0", default-features = false}
pallet-nomination-pools =  { version = "38.1.0", default-features = false}

# frame/staking/reward-curve

proc-macro-crate = { version = "3.0.0" }
sp-arithmetic = { version = "26.1.0", default-features = false }

getrandom = { version = "0.2", features = ["js"] }
